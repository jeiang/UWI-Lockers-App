package main

import (
	"embed"
	"io/fs"
	"net/http"
	"sync"
	"time"

	"github.com/charmbracelet/log"

	"aidanpinard.co/lockers-app/handlers"
	"github.com/gorilla/mux"
)

//go:embed all:frontend/dist
var preactFS embed.FS

// Keep the main thread from dying until server processes are done
var wg sync.WaitGroup

func main() {
	// setup cache path flag
	config := loadConfig()

	// Root at the `dist` folder generated by the preact app.
	distFS, err := fs.Sub(preactFS, "frontend/dist")
	if err != nil {
		log.Fatal(err)
	}

	r := mux.NewRouter().StrictSlash(true)
	// The static preact app will be served under `/`.
	http.Handle("/", http.FileServer(http.FS(distFS)))
	handlers.RegisterApiRoutes(r)

	server := &http.Server{
		Handler:      r,
		Addr:         config.addr,
		WriteTimeout: 15 * time.Second,
	}

	// TODO: tls
	wg.Add(1)
	go func() {
		defer wg.Done()
		log.Infof("starting server on http://%s\n", config.addr)
		err := server.ListenAndServe()
		if err != nil {
			log.Fatal(err)
		}
	}()

	wg.Wait()
}
